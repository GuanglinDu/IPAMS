<h3>The Current LAN</h3>
<table class="table table-condensed">
<thead>
  <th><strong>LAN Number</strong></th>
  <th><strong>LAN Name</strong></th>
  <th><strong>LAN Description</strong></th>
</thead>
<tbody>
  <tr>
    <td><%= @lan.lan_number %></td>
    <td><%= @lan.lan_name %></td>
    <td><%= @lan.lan_description %></td>
  </tr>
</tbody>
</table>

<%# https://github.com/bootstrap-ruby/will_paginate-bootstrap %>
<%= page_entries_info @vlans %><br />
<%= will_paginate @vlans, renderer: BootstrapPagination::Rails %>

<h3>Existing VLANs in the <%= @lan.lan_name %></h3>

<% partial_name = "vlans/vlan" %>
<% partial_name = "vlans/uneditable" unless policy(@lan).edit? %>
<% cache cache_key_for_lans("lans/" + partial_name, @vlans.offset) do %>
<table class="table table-condensed">
  <thead>
  <tr>
    <th>No.</th>
    <th>LAN Name</th>
    <th>VLAN Number</th>
    <th>VLAN Name</th>
    <th>Static IP Start</th>
    <th>Static IP End</th>
    <th>Subnet Mask</th>
    <th>Gateway</th>
    <th>Description</th>
    <th></th>
    <th></th>
    <th></th>
  </tr>
  </thead>

  <% if false %>
    As the render method iterates over the @lan.vlans collection,
    it assigns each vlan to a local variable named the same as the partial,
    in this case vlan, which is then available in the partial for us to show.
    The following either will do: 
    render partial: "vlans/vlan", collection: @lan.vlans
  <% end %>
  <tbody id="main-table-body">
    <% count = 0 %>
    <%= render partial: partial_name, collection: @vlans,
               locals: {count: @vlans.offset} %>
  </tbody>
</table>
<% end %>

<%= page_entries_info @vlans %><br />
<%= will_paginate @vlans, renderer: BootstrapPagination::Rails %>

<div>
  <%= link_to lans_path, class: 'btn btn-success' do %>
    <i class="glyphicon glyphicon-arrow-left"></i> Back to LANs
  <% end %>
  <% if policy(@lan).edit? %>
  | <%= link_to edit_lan_path(@lan), class: 'btn btn-success' do %>
      <i class="glyphicon glyphicon-edit"></i> Edit LAN
    <% end %>
  <% end %>
</div>
